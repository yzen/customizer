#! /usr/bin/env node --harmony

/**
 * Temporary build script to handle addon code.
 * Addon code differs from a full app as it can not use the AMD loader.
 * Instead we simply concat everything into a single file, and don't use AMD modules.
 * This is only until we build this functionality into fxos-build.
 */
var gulp = require('gulp');
var merge = require('gulp-merge');
var replace = require('gulp-replace');
var wrapper = require('gulp-wrapper');

var buildModules = __dirname + '/node_modules/fxos-build/node_modules/';
var concat = require(buildModules + 'gulp-concat');
var to5 = require(buildModules + 'gulp-6to5');

const APP_ROOT = './app/';
const DIST_APP_ROOT = './dist/app/';

var componentsHeader = [
  'function componentsSource() {/*',
  '(function() {'
].join('\n');

var componentsFooter = [
  '}).call(window);',
  '*/}',
  '(function() {',
    'var source = componentsSource.toString();',
    'source = source.substr(31, source.length - 34);',
    'window.localStorage.setItem(\'__CUSTOMIZER__componentsSource\', source);',
  '})();',
  'console.log(\'Injected components-concat.js\');'
].join('\n');

var addonHeader = [
  '(function() {',
  'var result;' // js-prettify needs this to run in 'strict' mode.
].join('\n');

var addonFooter = [
  '}).call(window);',
  'console.log(\'Injected addon-concat.js\');'
].join('\n');

var components = gulp.src([
  APP_ROOT + 'components/drag/drag.js',
  APP_ROOT + 'components/gaia-component/gaia-component.js',
  APP_ROOT + 'components/gaia-icons/gaia-icons.js',
  APP_ROOT + 'components/font-fit/font-fit.js',
  APP_ROOT + 'components/gaia-text-input/gaia-text-input.js',
  APP_ROOT + 'components/gaia-dialog/gaia-dialog.js',
  APP_ROOT + 'components/gaia-dialog/gaia-dialog-prompt.js',
  APP_ROOT + 'components/gaia-dom-tree/gaia-dom-tree.js',
  APP_ROOT + 'components/gaia-modal/gaia-modal.js',
  APP_ROOT + 'components/gaia-tabs/gaia-tabs.js',
  APP_ROOT + 'components/gaia-header/gaia-header.js',
  APP_ROOT + 'components/gaia-pages/gaia-pages.js',
  APP_ROOT + 'components/gaia-list/gaia-list.js',
  APP_ROOT + 'components/gaia-button/gaia-button.js',
  APP_ROOT + 'components/gaia-toolbar/gaia-toolbar.js',
  APP_ROOT + 'components/jszip/dist/jszip.js',
  APP_ROOT + 'components/esprima/esprima.js'
])
.pipe(concat('components-concat.js'))

// Namespace all `gaia-` components to avoid collisions in case the
// app the Customizer is injected into has already declared them.
.pipe(replace(/gaia\-/g, 'customizer-gaia-'))

// Fix the `gaia-icons` path after namespacing has completed.
.pipe(replace(/customizer\-gaia\-icons\/customizer\-gaia\-icons\.css/g, 'gaia-icons/gaia-icons.css'))

// Strip out all comments since all this code will get concatenated and
// wrapped in a multi-line comment inside a function for lazy-loading.
.pipe(replace(/(?:\/\*(?:[\s\S]*?)\*\/)|(?:([\s;])+\/\/(?:.*)$)/gm, ''))

// Wrap the entire source in a multi-line comment within a function
// (e.g.: `function() {/* ... */}`) and insert the source in localStorage
// for lazy-loading later.
.pipe(wrapper({
  header: componentsHeader,
  footer: componentsFooter
}))
.pipe(gulp.dest(DIST_APP_ROOT + 'js'));

var addon = gulp.src([
  APP_ROOT + 'components/observe-shim/lib/observe-shim.js',
  APP_ROOT + 'components/observe-utils/lib/observe-utils.js',
  APP_ROOT + 'components/fxos-mvc/mvc.js',
  APP_ROOT + 'components/fxos-achievements-service/achievements-service.js',
  APP_ROOT + 'components/gesture/gesture.js',
  APP_ROOT + 'components/js-beautify/js/lib/beautify.js',
  APP_ROOT + 'components/js-beautify/js/lib/beautify-css.js',
  APP_ROOT + 'components/js-beautify/js/lib/beautify-html.js',
  APP_ROOT + 'js/elements/**.js',
  APP_ROOT + 'js/controllers/**.js',
  APP_ROOT + 'js/models/**.js',
  APP_ROOT + 'js/services/**.js',
  APP_ROOT + 'js/views/**.js',
  APP_ROOT + 'js/app.js'
])
.pipe(concat('addon-concat.js'))
.pipe(to5({
  modules: 'ignore'
}).on('error', function(e) {
  console.log('error running 6to5', e);
}))

// Namespace all `gaia-` components to avoid collisions in case the
// app the Customizer is injected into has already declared them.
.pipe(replace(/gaia\-/g, 'customizer-gaia-'))

// Fix the `gaia-icons` path after namespacing has completed.
.pipe(replace(/customizer\-gaia\-icons\/customizer\-gaia\-icons\.css/g, 'gaia-icons/gaia-icons.css'))
.pipe(wrapper({
  header: addonHeader,
  footer: addonFooter
}))
.pipe(gulp.dest(DIST_APP_ROOT + 'js'));

console.log('all done.');
